/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.rameses.gov.etracs.waterworks.views;

import com.rameses.osiris2.themes.FormPage;
import com.rameses.rcp.ui.annotations.Template;

/**
 *
 * @author elmonazareno
 */
@Template(FormPage.class)
public class WaterworksBillCapturePage extends javax.swing.JPanel {

    /**
     * Creates new form WaterworksBillInitialPage
     */
    public WaterworksBillCapturePage() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        vwInitial = new com.rameses.rcp.control.XPanel();
        xFormPanel3 = new com.rameses.rcp.control.XFormPanel();
        xIntegerField1 = new com.rameses.rcp.control.XIntegerField();
        monthList1 = new com.rameses.enterprise.components.MonthList();
        xTextField1 = new com.rameses.rcp.control.XTextField();
        xDateField1 = new com.rameses.rcp.control.XDateField();
        jLabel2 = new javax.swing.JLabel();
        vwSummary = new com.rameses.rcp.control.XPanel();
        xTabbedPane1 = new com.rameses.rcp.control.XTabbedPane();
        jPanel8 = new javax.swing.JPanel();
        xFormPanel5 = new com.rameses.rcp.control.XFormPanel();
        xLabel2 = new com.rameses.rcp.control.XLabel();
        xLabel12 = new com.rameses.rcp.control.XLabel();
        xLabel14 = new com.rameses.rcp.control.XLabel();
        xLabel15 = new com.rameses.rcp.control.XLabel();
        xLabel18 = new com.rameses.rcp.control.XLabel();
        xLabel13 = new com.rameses.rcp.control.XLabel();
        xLabel16 = new com.rameses.rcp.control.XLabel();
        xLabel17 = new com.rameses.rcp.control.XLabel();
        xDataTable1 = new com.rameses.rcp.control.XDataTable();
        xPanel3 = new com.rameses.rcp.control.XPanel();
        xFormPanel11 = new com.rameses.rcp.control.XFormPanel();
        xLabel33 = new com.rameses.rcp.control.XLabel();
        xLabel34 = new com.rameses.rcp.control.XLabel();
        xLabel35 = new com.rameses.rcp.control.XLabel();
        xLabel36 = new com.rameses.rcp.control.XLabel();
        xFormPanel12 = new com.rameses.rcp.control.XFormPanel();
        xLabel4 = new com.rameses.rcp.control.XLabel();
        xLabel37 = new com.rameses.rcp.control.XLabel();
        xLabel38 = new com.rameses.rcp.control.XLabel();
        xLabel39 = new com.rameses.rcp.control.XLabel();
        vwEdit = new com.rameses.rcp.control.XPanel();
        pnlHead = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        xActionBar1 = new com.rameses.rcp.control.XActionBar();
        xLabel25 = new com.rameses.rcp.control.XLabel();
        xPanel2 = new com.rameses.rcp.control.XPanel();
        xFormPanel7 = new com.rameses.rcp.control.XFormPanel();
        xLabel20 = new com.rameses.rcp.control.XLabel();
        xLabel21 = new com.rameses.rcp.control.XLabel();
        xLabel22 = new com.rameses.rcp.control.XLabel();
        xLabel23 = new com.rameses.rcp.control.XLabel();
        xLabel24 = new com.rameses.rcp.control.XLabel();
        xFormPanel8 = new com.rameses.rcp.control.XFormPanel();
        xLabel3 = new com.rameses.rcp.control.XLabel();
        xLabel26 = new com.rameses.rcp.control.XLabel();
        xLabel27 = new com.rameses.rcp.control.XLabel();
        pnlFoot = new javax.swing.JPanel();
        xFormPanel1 = new com.rameses.rcp.control.XFormPanel();
        xLabel30 = new com.rameses.rcp.control.XLabel();
        xLabel32 = new com.rameses.rcp.control.XLabel();
        xLabel40 = new com.rameses.rcp.control.XLabel();
        xFormPanel2 = new com.rameses.rcp.control.XFormPanel();
        xLabel29 = new com.rameses.rcp.control.XLabel();
        xLabel31 = new com.rameses.rcp.control.XLabel();
        xFormPanel4 = new com.rameses.rcp.control.XFormPanel();
        xLabel41 = new com.rameses.rcp.control.XLabel();
        xLabel43 = new com.rameses.rcp.control.XLabel();
        xLabel42 = new com.rameses.rcp.control.XLabel();
        pnlBody = new javax.swing.JPanel();
        pnlPreviousItem = new com.rameses.rcp.control.XPanel();
        xDataTable5 = new com.rameses.rcp.control.XDataTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        xButton4 = new com.rameses.rcp.control.XButton();
        xButton5 = new com.rameses.rcp.control.XButton();
        xButton6 = new com.rameses.rcp.control.XButton();
        xButton17 = new com.rameses.rcp.control.XButton();
        xButton18 = new com.rameses.rcp.control.XButton();
        pnlConsumption = new com.rameses.rcp.control.XPanel();
        jPanel15 = new javax.swing.JPanel();
        xButton19 = new com.rameses.rcp.control.XButton();
        xDataTable6 = new com.rameses.rcp.control.XDataTable();
        pnlCurrent = new com.rameses.rcp.control.XPanel();
        jPanel6 = new javax.swing.JPanel();
        xButton1 = new com.rameses.rcp.control.XButton();
        xButton2 = new com.rameses.rcp.control.XButton();
        xButton3 = new com.rameses.rcp.control.XButton();
        xButton10 = new com.rameses.rcp.control.XButton();
        xButton9 = new com.rameses.rcp.control.XButton();
        xDataTable3 = new com.rameses.rcp.control.XDataTable();
        pnlPayment = new com.rameses.rcp.control.XPanel();
        jPanel14 = new javax.swing.JPanel();
        xButton11 = new com.rameses.rcp.control.XButton();
        xButton7 = new com.rameses.rcp.control.XButton();
        xButton8 = new com.rameses.rcp.control.XButton();
        xDataTable4 = new com.rameses.rcp.control.XDataTable();

        setPreferredSize(new java.awt.Dimension(972, 540));
        setLayout(new java.awt.CardLayout());

        vwInitial.setVisibleWhen("#{ viemode == 'initial' }");
        vwInitial.setPreferredSize(new java.awt.Dimension(0, 540));

        xFormPanel3.setCaptionWidth(150);

        xIntegerField1.setCaption("Enter Year");
        xIntegerField1.setName("entity.year"); // NOI18N
        xIntegerField1.setRequired(true);
        xFormPanel3.add(xIntegerField1);

        monthList1.setCaption("Enter Month");
        monthList1.setName("entity.month"); // NOI18N
        monthList1.setPreferredSize(new java.awt.Dimension(0, 27));
        monthList1.setRequired(true);
        xFormPanel3.add(monthList1);

        xTextField1.setCaption("Bill No");
        xTextField1.setName("entity.billno"); // NOI18N
        xTextField1.setCellPadding(new java.awt.Insets(20, 0, 0, 0));
        xTextField1.setPreferredSize(new java.awt.Dimension(150, 20));
        xFormPanel3.add(xTextField1);

        xDateField1.setCaption("Bill Date");
        xDateField1.setName("entity.billdate"); // NOI18N
        xDateField1.setOutputFormat("");
        xDateField1.setPreferredSize(new java.awt.Dimension(150, 20));
        xFormPanel3.add(xDateField1);

        jLabel2.setText("Enter Period of Initial Bill");

        javax.swing.GroupLayout vwInitialLayout = new javax.swing.GroupLayout(vwInitial);
        vwInitial.setLayout(vwInitialLayout);
        vwInitialLayout.setHorizontalGroup(
            vwInitialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(vwInitialLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(vwInitialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, vwInitialLayout.createSequentialGroup()
                        .addComponent(xFormPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(122, 122, 122)))
                .addContainerGap(463, Short.MAX_VALUE))
        );
        vwInitialLayout.setVerticalGroup(
            vwInitialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(vwInitialLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(xFormPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(363, Short.MAX_VALUE))
        );

        add(vwInitial, "card3");

        vwSummary.setVisibleWhen("#{ viewmode == 'summary' }");
        vwSummary.setLayout(new java.awt.BorderLayout());

        xFormPanel5.setCaptionWidth(120);

        xLabel2.setCaption("Acct No");
        xLabel2.setExpression("#{ entity.acctno }");
        xFormPanel5.add(xLabel2);

        xLabel12.setCaption("Acct Name");
        xLabel12.setExpression("#{ entity.acctname }");
        xFormPanel5.add(xLabel12);

        xLabel14.setCaption("Meter Status");
        xLabel14.setExpression("#{ entity.meterstate }");
        xFormPanel5.add(xLabel14);

        xLabel15.setCaption("Acct Status");
        xLabel15.setExpression("#{ entity.acctstate }");
        xFormPanel5.add(xLabel15);

        xLabel18.setCaption("Classification");
        xLabel18.setExpression("#{ entity.classificationid }");
        xFormPanel5.add(xLabel18);

        xLabel13.setCaption("Meter No");
        xLabel13.setExpression("#{ entity.meter.serialno }");
        xLabel13.setCellPadding(new java.awt.Insets(20, 0, 0, 0));
        xFormPanel5.add(xLabel13);

        xLabel16.setCaption("Meter Capacity");
        xLabel16.setExpression("#{ entity.meter.capacity }");
        xFormPanel5.add(xLabel16);

        xLabel17.setCaption("Meter Size");
        xLabel17.setExpression("#{ entity.meter.size.title }");
        xFormPanel5.add(xLabel17);

        xDataTable1.setHandler("detailListHandler");
        xDataTable1.setItems("");
        xDataTable1.setColumns(new com.rameses.rcp.common.Column[]{
            new com.rameses.rcp.common.Column(new Object[]{
                new Object[]{"name", "particulars"}
                , new Object[]{"caption", "Particulars"}
                , new Object[]{"width", 150}
                , new Object[]{"minWidth", 0}
                , new Object[]{"maxWidth", 0}
                , new Object[]{"required", false}
                , new Object[]{"resizable", true}
                , new Object[]{"nullWhenEmpty", true}
                , new Object[]{"editable", false}
                , new Object[]{"visible", true}
                , new Object[]{"visibleWhen", null}
                , new Object[]{"textCase", com.rameses.rcp.constant.TextCase.NONE}
                , new Object[]{"typeHandler", new com.rameses.rcp.common.TextColumnHandler()}
            }),
            new com.rameses.rcp.common.Column(new Object[]{
                new Object[]{"name", "amount"}
                , new Object[]{"caption", "Amount"}
                , new Object[]{"width", 100}
                , new Object[]{"minWidth", 100}
                , new Object[]{"maxWidth", 100}
                , new Object[]{"required", false}
                , new Object[]{"resizable", true}
                , new Object[]{"nullWhenEmpty", true}
                , new Object[]{"editable", false}
                , new Object[]{"visible", true}
                , new Object[]{"visibleWhen", null}
                , new Object[]{"textCase", com.rameses.rcp.constant.TextCase.NONE}
                , new Object[]{"typeHandler", new com.rameses.rcp.common.DecimalColumnHandler("#,##0.00;(#,##0.00)", -1.0, -1.0, false, 2)}
            }),
            new com.rameses.rcp.common.Column(new Object[]{
                new Object[]{"name", null}
                , new Object[]{"caption", " "}
                , new Object[]{"width", 20}
                , new Object[]{"minWidth", 20}
                , new Object[]{"maxWidth", 20}
                , new Object[]{"required", false}
                , new Object[]{"resizable", true}
                , new Object[]{"nullWhenEmpty", true}
                , new Object[]{"editable", false}
                , new Object[]{"visible", true}
                , new Object[]{"visibleWhen", null}
                , new Object[]{"textCase", com.rameses.rcp.constant.TextCase.NONE}
                , new Object[]{"typeHandler", new com.rameses.rcp.common.TextColumnHandler()}
            })
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(xFormPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(xDataTable1, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(xFormPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(xDataTable1, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        xTabbedPane1.addTab("General Info", jPanel8);

        vwSummary.add(xTabbedPane1, java.awt.BorderLayout.CENTER);

        xPanel3.setVisibleWhen("#{  entity.step > 0 }");
        xPanel3.setPreferredSize(new java.awt.Dimension(805, 90));

        xFormPanel11.setCaptionWidth(150);

        xLabel33.setCaption("Bill Year/Month");
        xLabel33.setExpression("#{ entity.period.year } #{ entity.period.monthname }");
        xFormPanel11.add(xLabel33);

        xLabel34.setCaption("Bill Period");
        xLabel34.setExpression("#{ entity.period.fromdate } to #{ entity.period.todate }");
        xFormPanel11.add(xLabel34);

        xLabel35.setCaption("Bill Due Date");
        xLabel35.setExpression("#{ entity.period.duedate } ");
        xLabel35.setDateFormat("yyyy-MMM-dd");
        xFormPanel11.add(xLabel35);

        xLabel36.setCaption("Pmt Disc Date");
        xLabel36.setExpression("#{ entity.period.discdate } ");
        xLabel36.setDateFormat("yyyy-MMM-dd");
        xFormPanel11.add(xLabel36);

        xFormPanel12.setCaptionWidth(120);

        xLabel4.setCaption("Bill No");
        xLabel4.setExpression("#{ entity.billno }");
        xFormPanel12.add(xLabel4);

        xLabel37.setCaption("Bill Date");
        xLabel37.setExpression("#{ entity.billdate }");
        xLabel37.setDateFormat("yyyy-MMM-dd");
        xFormPanel12.add(xLabel37);

        xLabel38.setCaption("Bill Expiry Date");
        xLabel38.setExpression("#{ entity.period.billexpirydate } ");
        xLabel38.setDateFormat("yyyy-MMM-dd");
        xFormPanel12.add(xLabel38);

        xLabel39.setCaption("Total Due");
        xLabel39.setExpression("#{ entity.totalamtdue }");
        xLabel39.setCaptionFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        xLabel39.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        xLabel39.setNumberFormat("#,##0.00;(#,##0.00)");
        xFormPanel12.add(xLabel39);

        javax.swing.GroupLayout xPanel3Layout = new javax.swing.GroupLayout(xPanel3);
        xPanel3.setLayout(xPanel3Layout);
        xPanel3Layout.setHorizontalGroup(
            xPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(xPanel3Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(xFormPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(xFormPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        xPanel3Layout.setVerticalGroup(
            xPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(xPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(xPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(xFormPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(xPanel3Layout.createSequentialGroup()
                        .addComponent(xFormPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        vwSummary.add(xPanel3, java.awt.BorderLayout.NORTH);

        add(vwSummary, "card4");

        vwEdit.setVisibleWhen("#{ viewmode == 'edit' }");
        vwEdit.setLayout(new java.awt.BorderLayout());

        pnlHead.setPreferredSize(new java.awt.Dimension(941, 180));
        pnlHead.setLayout(new java.awt.BorderLayout());

        jPanel5.setLayout(new java.awt.BorderLayout());

        xActionBar1.setFormName("formName");
        xActionBar1.setName("viewActions"); // NOI18N
        xActionBar1.setPreferredSize(new java.awt.Dimension(83, 30));
        jPanel5.add(xActionBar1, java.awt.BorderLayout.NORTH);

        xLabel25.setExpression("#{ subtitle }");
        xLabel25.setVisibleWhen("#{ subtitle != null }");
        xLabel25.setBackground(new java.awt.Color(255, 255, 255));
        xLabel25.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        xLabel25.setOpaque(true);
        xLabel25.setPreferredSize(new java.awt.Dimension(89, 30));
        jPanel5.add(xLabel25, java.awt.BorderLayout.SOUTH);

        pnlHead.add(jPanel5, java.awt.BorderLayout.NORTH);

        xPanel2.setVisibleWhen("#{  entity.step > 0 }");
        xPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        xPanel2.setPreferredSize(new java.awt.Dimension(805, 90));

        xFormPanel7.setCaptionWidth(150);

        xLabel20.setCaption("Bill Year/Month");
        xLabel20.setExpression("#{ entity.period.year } #{ entity.period.monthname }");
        xFormPanel7.add(xLabel20);

        xLabel21.setCaption("Bill Period");
        xLabel21.setExpression("#{ entity.period.fromdate } to #{ entity.period.todate }");
        xFormPanel7.add(xLabel21);

        xLabel22.setCaption("Bill Due Date");
        xLabel22.setExpression("#{ entity.period.duedate } ");
        xLabel22.setDateFormat("yyyy-MMM-dd");
        xFormPanel7.add(xLabel22);

        xLabel23.setCaption("Pmt Disc Date");
        xLabel23.setExpression("#{ entity.period.discdate } ");
        xLabel23.setDateFormat("yyyy-MMM-dd");
        xFormPanel7.add(xLabel23);

        xLabel24.setCaption("Bill Expiry Date");
        xLabel24.setExpression("#{ entity.period.billexpirydate } ");
        xLabel24.setDateFormat("yyyy-MMM-dd");
        xFormPanel7.add(xLabel24);

        xFormPanel8.setCaptionWidth(100);

        xLabel3.setCaption("Bill No");
        xLabel3.setExpression("#{ entity.billno }");
        xFormPanel8.add(xLabel3);

        xLabel26.setCaption("Bill Date");
        xLabel26.setExpression("#{ entity.billdate }");
        xLabel26.setDateFormat("yyyy-MMM-dd");
        xFormPanel8.add(xLabel26);

        xLabel27.setCaption("Total Due");
        xLabel27.setExpression("#{ entity.totalamtdue }");
        xLabel27.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        xLabel27.setCaptionFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        xLabel27.setCellPadding(new java.awt.Insets(20, 0, 0, 0));
        xLabel27.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        xLabel27.setNumberFormat("#,##0.00;(#,##0.00)");
        xLabel27.setPreferredSize(new java.awt.Dimension(0, 20));
        xFormPanel8.add(xLabel27);

        javax.swing.GroupLayout xPanel2Layout = new javax.swing.GroupLayout(xPanel2);
        xPanel2.setLayout(xPanel2Layout);
        xPanel2Layout.setHorizontalGroup(
            xPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(xPanel2Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(xFormPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(xFormPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        xPanel2Layout.setVerticalGroup(
            xPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(xPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(xPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(xFormPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(xFormPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)))
        );

        pnlHead.add(xPanel2, java.awt.BorderLayout.CENTER);

        vwEdit.add(pnlHead, java.awt.BorderLayout.NORTH);

        pnlFoot.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        pnlFoot.setPreferredSize(new java.awt.Dimension(972, 80));

        xFormPanel1.setCaptionWidth(120);

        xLabel30.setCaption("Balance Forward");
        xLabel30.setExpression("#{ entity.balanceforward } ");
        xLabel30.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        xLabel30.setNumberFormat("#,##0.00;(#,##0.00)");
        xLabel30.setPreferredSize(new java.awt.Dimension(0, 20));
        xFormPanel1.add(xLabel30);

        xLabel32.setCaption("This Bill Amount");
        xLabel32.setExpression("#{ entity.billamount } ");
        xLabel32.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        xLabel32.setNumberFormat("#,##0.00;(#,##0.00)");
        xLabel32.setPreferredSize(new java.awt.Dimension(0, 20));
        xFormPanel1.add(xLabel32);

        xLabel40.setCaption("Total Surcharge");
        xLabel40.setExpression("#{ entity.totalsurcharge } ");
        xLabel40.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        xLabel40.setNumberFormat("#,##0.00;(#,##0.00)");
        xLabel40.setPreferredSize(new java.awt.Dimension(0, 20));
        xFormPanel1.add(xLabel40);

        xFormPanel2.setCaptionWidth(140);

        xLabel29.setCaption("Unapplied Credits");
        xLabel29.setExpression("#{ entity.totalcredits } ");
        xLabel29.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        xLabel29.setNumberFormat("#,##0.00;(#,##0.00)");
        xLabel29.setPreferredSize(new java.awt.Dimension(0, 20));
        xFormPanel2.add(xLabel29);

        xLabel31.setCaption("Unpaid Amt");
        xLabel31.setExpression("#{ entity.totalunpaid } ");
        xLabel31.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        xLabel31.setNumberFormat("#,##0.00;(#,##0.00)");
        xLabel31.setPreferredSize(new java.awt.Dimension(0, 20));
        xFormPanel2.add(xLabel31);

        xFormPanel4.setCaptionWidth(150);

        xLabel41.setCaption("Total Discount");
        xLabel41.setExpression("#{ entity.totaldiscount } ");
        xLabel41.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        xLabel41.setNumberFormat("#,##0.00;(#,##0.00)");
        xLabel41.setPreferredSize(new java.awt.Dimension(0, 20));
        xFormPanel4.add(xLabel41);

        xLabel43.setCaption("Total Cash Payments");
        xLabel43.setExpression("#{ entity.totalpayment } ");
        xLabel43.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        xLabel43.setNumberFormat("#,##0.00;(#,##0.00)");
        xLabel43.setPreferredSize(new java.awt.Dimension(0, 20));
        xFormPanel4.add(xLabel43);

        xLabel42.setCaption("Bill Amount Due");
        xLabel42.setExpression("#{ entity.totalamtdue } ");
        xLabel42.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        xLabel42.setNumberFormat("#,##0.00;(#,##0.00)");
        xLabel42.setPreferredSize(new java.awt.Dimension(0, 20));
        xFormPanel4.add(xLabel42);

        javax.swing.GroupLayout pnlFootLayout = new javax.swing.GroupLayout(pnlFoot);
        pnlFoot.setLayout(pnlFootLayout);
        pnlFootLayout.setHorizontalGroup(
            pnlFootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFootLayout.createSequentialGroup()
                .addGap(271, 271, 271)
                .addComponent(xFormPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(xFormPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(157, Short.MAX_VALUE))
            .addGroup(pnlFootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlFootLayout.createSequentialGroup()
                    .addGap(16, 16, 16)
                    .addComponent(xFormPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(715, Short.MAX_VALUE)))
        );
        pnlFootLayout.setVerticalGroup(
            pnlFootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFootLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlFootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlFootLayout.createSequentialGroup()
                        .addComponent(xFormPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(xFormPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(pnlFootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlFootLayout.createSequentialGroup()
                    .addGap(5, 5, 5)
                    .addComponent(xFormPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(14, Short.MAX_VALUE)))
        );

        vwEdit.add(pnlFoot, java.awt.BorderLayout.SOUTH);

        pnlBody.setLayout(new java.awt.CardLayout());

        pnlPreviousItem.setVisibleWhen("#{ entity.step == 1 }");
        pnlPreviousItem.setPreferredSize(new java.awt.Dimension(972, 400));
        pnlPreviousItem.setLayout(new java.awt.BorderLayout());

        xDataTable5.setHandler("listHandler");
        xDataTable5.setItems("");
        xDataTable5.setName("selectedItem"); // NOI18N
        xDataTable5.setVisibleWhen("");
        xDataTable5.setColumns(new com.rameses.rcp.common.Column[]{
            new com.rameses.rcp.common.Column(new Object[]{
                new Object[]{"name", "year"}
                , new Object[]{"caption", "Year"}
                , new Object[]{"width", 80}
                , new Object[]{"minWidth", 80}
                , new Object[]{"maxWidth", 80}
                , new Object[]{"required", false}
                , new Object[]{"resizable", true}
                , new Object[]{"nullWhenEmpty", true}
                , new Object[]{"editable", false}
                , new Object[]{"visible", true}
                , new Object[]{"visibleWhen", null}
                , new Object[]{"textCase", com.rameses.rcp.constant.TextCase.NONE}
                , new Object[]{"typeHandler", new com.rameses.rcp.common.IntegerColumnHandler(null, -1, -1)}
            }),
            new com.rameses.rcp.common.Column(new Object[]{
                new Object[]{"name", "monthname"}
                , new Object[]{"caption", "Month"}
                , new Object[]{"width", 80}
                , new Object[]{"minWidth", 80}
                , new Object[]{"maxWidth", 80}
                , new Object[]{"required", false}
                , new Object[]{"resizable", true}
                , new Object[]{"nullWhenEmpty", true}
                , new Object[]{"editable", false}
                , new Object[]{"visible", true}
                , new Object[]{"visibleWhen", null}
                , new Object[]{"textCase", com.rameses.rcp.constant.TextCase.NONE}
                , new Object[]{"typeHandler", new com.rameses.rcp.common.TextColumnHandler()}
            }),
            new com.rameses.rcp.common.Column(new Object[]{
                new Object[]{"name", "particulars"}
                , new Object[]{"caption", "Particulars"}
                , new Object[]{"width", 150}
                , new Object[]{"minWidth", 200}
                , new Object[]{"maxWidth", 0}
                , new Object[]{"required", false}
                , new Object[]{"resizable", true}
                , new Object[]{"nullWhenEmpty", true}
                , new Object[]{"editable", false}
                , new Object[]{"visible", true}
                , new Object[]{"visibleWhen", null}
                , new Object[]{"textCase", com.rameses.rcp.constant.TextCase.NONE}
                , new Object[]{"typeHandler", new com.rameses.rcp.common.TextColumnHandler()}
            }),
            new com.rameses.rcp.common.Column(new Object[]{
                new Object[]{"name", "amount"}
                , new Object[]{"caption", "Amount"}
                , new Object[]{"width", 100}
                , new Object[]{"minWidth", 100}
                , new Object[]{"maxWidth", 100}
                , new Object[]{"required", false}
                , new Object[]{"resizable", true}
                , new Object[]{"nullWhenEmpty", true}
                , new Object[]{"editable", false}
                , new Object[]{"visible", true}
                , new Object[]{"visibleWhen", null}
                , new Object[]{"textCase", com.rameses.rcp.constant.TextCase.NONE}
                , new Object[]{"typeHandler", new com.rameses.rcp.common.DecimalColumnHandler("#,##0.00", -1.0, -1.0, false, 2)}
            })
        });
        pnlPreviousItem.add(xDataTable5, java.awt.BorderLayout.CENTER);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jLabel1.setText("<html> Add previous entries that will total the <b>Balance Forward</b> specified. Click on submit when finished. </html>");
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jPanel1.add(jLabel1, java.awt.BorderLayout.NORTH);

        jPanel13.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        xButton4.setName("addItem"); // NOI18N
        xButton4.setVisibleWhen("#{ entity.balanceforward >= 0 }");
        xButton4.setText("Add Item");
        jPanel13.add(xButton4);

        xButton5.setName("openItem"); // NOI18N
        xButton5.setVisibleWhen("#{ entity.balanceforward >= 0 }");
        xButton5.setText("Open Item");
        jPanel13.add(xButton5);

        xButton6.setName("removeItem"); // NOI18N
        xButton6.setVisibleWhen("#{ entity.balanceforward >= 0 }");
        xButton6.setText("Remove Item");
        jPanel13.add(xButton6);

        xButton17.setName("addCredit"); // NOI18N
        xButton17.setVisibleWhen("#{ entity.balanceforward == 0 }");
        xButton17.setText("Add Credit");
        jPanel13.add(xButton17);

        xButton18.setName("removeCredit"); // NOI18N
        xButton18.setVisibleWhen("#{ entity.balanceforward < 0 }");
        xButton18.setText("Remove Credit");
        jPanel13.add(xButton18);

        jPanel1.add(jPanel13, java.awt.BorderLayout.SOUTH);

        pnlPreviousItem.add(jPanel1, java.awt.BorderLayout.PAGE_START);

        pnlBody.add(pnlPreviousItem, "card8");

        pnlConsumption.setVisibleWhen("#{ entity.step == 2 }");
        pnlConsumption.setLayout(new java.awt.BorderLayout());

        jPanel15.setOpaque(false);
        jPanel15.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        xButton19.setCaption("Build Entries");
        xButton19.setName("buildConsumption"); // NOI18N
        xButton19.setText("Build Consumptions");
        jPanel15.add(xButton19);

        pnlConsumption.add(jPanel15, java.awt.BorderLayout.NORTH);

        xDataTable6.setHandler("consumptionListHandler");
        xDataTable6.setItems("");
        xDataTable6.setName("selectedConsumption"); // NOI18N
        xDataTable6.setVisibleWhen("");
        xDataTable6.setColumns(new com.rameses.rcp.common.Column[]{
            new com.rameses.rcp.common.Column(new Object[]{
                new Object[]{"name", "year"}
                , new Object[]{"caption", "Year"}
                , new Object[]{"width", 80}
                , new Object[]{"minWidth", 80}
                , new Object[]{"maxWidth", 80}
                , new Object[]{"required", false}
                , new Object[]{"resizable", true}
                , new Object[]{"nullWhenEmpty", true}
                , new Object[]{"editable", false}
                , new Object[]{"visible", true}
                , new Object[]{"visibleWhen", null}
                , new Object[]{"textCase", com.rameses.rcp.constant.TextCase.NONE}
                , new Object[]{"typeHandler", new com.rameses.rcp.common.IntegerColumnHandler(null, -1, -1)}
            }),
            new com.rameses.rcp.common.Column(new Object[]{
                new Object[]{"name", "monthname"}
                , new Object[]{"caption", "Month"}
                , new Object[]{"width", 80}
                , new Object[]{"minWidth", 80}
                , new Object[]{"maxWidth", 80}
                , new Object[]{"required", false}
                , new Object[]{"resizable", true}
                , new Object[]{"nullWhenEmpty", true}
                , new Object[]{"editable", false}
                , new Object[]{"visible", true}
                , new Object[]{"visibleWhen", null}
                , new Object[]{"textCase", com.rameses.rcp.constant.TextCase.NONE}
                , new Object[]{"typeHandler", new com.rameses.rcp.common.TextColumnHandler()}
            }),
            new com.rameses.rcp.common.Column(new Object[]{
                new Object[]{"name", "reading"}
                , new Object[]{"caption", "Reading"}
                , new Object[]{"width", 100}
                , new Object[]{"minWidth", 100}
                , new Object[]{"maxWidth", 100}
                , new Object[]{"required", false}
                , new Object[]{"resizable", true}
                , new Object[]{"nullWhenEmpty", true}
                , new Object[]{"editable", false}
                , new Object[]{"visible", true}
                , new Object[]{"visibleWhen", null}
                , new Object[]{"textCase", com.rameses.rcp.constant.TextCase.NONE}
                , new Object[]{"typeHandler", new com.rameses.rcp.common.IntegerColumnHandler(null, -1, -1)}
            }),
            new com.rameses.rcp.common.Column(new Object[]{
                new Object[]{"name", "volume"}
                , new Object[]{"caption", "Vol (cum)"}
                , new Object[]{"width", 150}
                , new Object[]{"minWidth", 150}
                , new Object[]{"maxWidth", 200}
                , new Object[]{"required", false}
                , new Object[]{"resizable", true}
                , new Object[]{"nullWhenEmpty", true}
                , new Object[]{"editable", false}
                , new Object[]{"visible", true}
                , new Object[]{"visibleWhen", null}
                , new Object[]{"textCase", com.rameses.rcp.constant.TextCase.NONE}
                , new Object[]{"typeHandler", new com.rameses.rcp.common.IntegerColumnHandler(null, -1, -1)}
            }),
            new com.rameses.rcp.common.Column(new Object[]{
                new Object[]{"name", "amount"}
                , new Object[]{"caption", "Amount"}
                , new Object[]{"width", 100}
                , new Object[]{"minWidth", 100}
                , new Object[]{"maxWidth", 100}
                , new Object[]{"required", false}
                , new Object[]{"resizable", true}
                , new Object[]{"nullWhenEmpty", true}
                , new Object[]{"editable", false}
                , new Object[]{"visible", true}
                , new Object[]{"visibleWhen", null}
                , new Object[]{"textCase", com.rameses.rcp.constant.TextCase.NONE}
                , new Object[]{"typeHandler", new com.rameses.rcp.common.DecimalColumnHandler("#,##0.00", -1.0, -1.0, false, 2)}
            }),
            new com.rameses.rcp.common.Column(new Object[]{
                new Object[]{"name", "hold"}
                , new Object[]{"caption", "Hold"}
                , new Object[]{"width", 50}
                , new Object[]{"minWidth", 50}
                , new Object[]{"maxWidth", 50}
                , new Object[]{"required", false}
                , new Object[]{"resizable", true}
                , new Object[]{"nullWhenEmpty", true}
                , new Object[]{"editable", false}
                , new Object[]{"visible", true}
                , new Object[]{"visibleWhen", null}
                , new Object[]{"textCase", com.rameses.rcp.constant.TextCase.NONE}
                , new Object[]{"typeHandler", new com.rameses.rcp.common.CheckBoxColumnHandler(java.lang.Integer.class, 1, 0)}
            }),
            new com.rameses.rcp.common.Column(new Object[]{
                new Object[]{"name", null}
                , new Object[]{"caption", "-"}
                , new Object[]{"width", 100}
                , new Object[]{"minWidth", 0}
                , new Object[]{"maxWidth", 0}
                , new Object[]{"required", false}
                , new Object[]{"resizable", true}
                , new Object[]{"nullWhenEmpty", true}
                , new Object[]{"editable", false}
                , new Object[]{"visible", true}
                , new Object[]{"visibleWhen", null}
                , new Object[]{"textCase", com.rameses.rcp.constant.TextCase.NONE}
                , new Object[]{"typeHandler", new com.rameses.rcp.common.TextColumnHandler()}
            })
        });
        pnlConsumption.add(xDataTable6, java.awt.BorderLayout.CENTER);

        pnlBody.add(pnlConsumption, "card3");

        pnlCurrent.setVisibleWhen("#{ entity.step == 3 }");
        pnlCurrent.setLayout(new java.awt.BorderLayout());

        jPanel6.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        xButton1.setName("addItem"); // NOI18N
        xButton1.setText("Add Item");
        jPanel6.add(xButton1);

        xButton2.setName("openItem"); // NOI18N
        xButton2.setText("Open Item");
        jPanel6.add(xButton2);

        xButton3.setName("removeItem"); // NOI18N
        xButton3.setText("Remove Item");
        jPanel6.add(xButton3);

        xButton10.setName("resetBill"); // NOI18N
        xButton10.setText("Reset Billing");
        jPanel6.add(xButton10);

        xButton9.setName("updateBillFees"); // NOI18N
        xButton9.setText("Run Billing Fees");
        jPanel6.add(xButton9);

        pnlCurrent.add(jPanel6, java.awt.BorderLayout.NORTH);

        xDataTable3.setHandler("listHandler");
        xDataTable3.setItems("");
        xDataTable3.setName("selectedItem"); // NOI18N
        xDataTable3.setVisibleWhen("");
        xDataTable3.setColumns(new com.rameses.rcp.common.Column[]{
            new com.rameses.rcp.common.Column(new Object[]{
                new Object[]{"name", "year"}
                , new Object[]{"caption", "Year"}
                , new Object[]{"width", 80}
                , new Object[]{"minWidth", 80}
                , new Object[]{"maxWidth", 80}
                , new Object[]{"required", false}
                , new Object[]{"resizable", true}
                , new Object[]{"nullWhenEmpty", true}
                , new Object[]{"editable", false}
                , new Object[]{"visible", true}
                , new Object[]{"visibleWhen", null}
                , new Object[]{"textCase", com.rameses.rcp.constant.TextCase.NONE}
                , new Object[]{"typeHandler", new com.rameses.rcp.common.IntegerColumnHandler(null, -1, -1)}
            }),
            new com.rameses.rcp.common.Column(new Object[]{
                new Object[]{"name", "monthname"}
                , new Object[]{"caption", "Month"}
                , new Object[]{"width", 100}
                , new Object[]{"minWidth", 100}
                , new Object[]{"maxWidth", 100}
                , new Object[]{"required", false}
                , new Object[]{"resizable", true}
                , new Object[]{"nullWhenEmpty", true}
                , new Object[]{"editable", false}
                , new Object[]{"visible", true}
                , new Object[]{"visibleWhen", null}
                , new Object[]{"textCase", com.rameses.rcp.constant.TextCase.NONE}
                , new Object[]{"typeHandler", new com.rameses.rcp.common.TextColumnHandler()}
            }),
            new com.rameses.rcp.common.Column(new Object[]{
                new Object[]{"name", "item.objid"}
                , new Object[]{"caption", "Item Code"}
                , new Object[]{"width", 100}
                , new Object[]{"minWidth", 120}
                , new Object[]{"maxWidth", 0}
                , new Object[]{"required", false}
                , new Object[]{"resizable", true}
                , new Object[]{"nullWhenEmpty", true}
                , new Object[]{"editable", false}
                , new Object[]{"visible", true}
                , new Object[]{"visibleWhen", null}
                , new Object[]{"textCase", com.rameses.rcp.constant.TextCase.NONE}
                , new Object[]{"typeHandler", new com.rameses.rcp.common.TextColumnHandler()}
            }),
            new com.rameses.rcp.common.Column(new Object[]{
                new Object[]{"name", "item.title"}
                , new Object[]{"caption", "Title"}
                , new Object[]{"width", 150}
                , new Object[]{"minWidth", 200}
                , new Object[]{"maxWidth", 0}
                , new Object[]{"required", false}
                , new Object[]{"resizable", true}
                , new Object[]{"nullWhenEmpty", true}
                , new Object[]{"editable", false}
                , new Object[]{"visible", true}
                , new Object[]{"visibleWhen", null}
                , new Object[]{"textCase", com.rameses.rcp.constant.TextCase.NONE}
                , new Object[]{"typeHandler", new com.rameses.rcp.common.TextColumnHandler()}
            }),
            new com.rameses.rcp.common.Column(new Object[]{
                new Object[]{"name", "amount"}
                , new Object[]{"caption", "Amount"}
                , new Object[]{"width", 100}
                , new Object[]{"minWidth", 100}
                , new Object[]{"maxWidth", 100}
                , new Object[]{"required", false}
                , new Object[]{"resizable", true}
                , new Object[]{"nullWhenEmpty", true}
                , new Object[]{"editable", false}
                , new Object[]{"visible", true}
                , new Object[]{"visibleWhen", null}
                , new Object[]{"textCase", com.rameses.rcp.constant.TextCase.NONE}
                , new Object[]{"typeHandler", new com.rameses.rcp.common.DecimalColumnHandler("#,##0.00", -1.0, -1.0, false, 2)}
            }),
            new com.rameses.rcp.common.Column(new Object[]{
                new Object[]{"name", "amtpaid"}
                , new Object[]{"caption", "Amt Paid"}
                , new Object[]{"width", 100}
                , new Object[]{"minWidth", 100}
                , new Object[]{"maxWidth", 100}
                , new Object[]{"required", false}
                , new Object[]{"resizable", true}
                , new Object[]{"nullWhenEmpty", true}
                , new Object[]{"editable", false}
                , new Object[]{"visible", true}
                , new Object[]{"visibleWhen", null}
                , new Object[]{"textCase", com.rameses.rcp.constant.TextCase.NONE}
                , new Object[]{"typeHandler", new com.rameses.rcp.common.DecimalColumnHandler("#,##0.00", -1.0, -1.0, false, 2)}
            }),
            new com.rameses.rcp.common.Column(new Object[]{
                new Object[]{"name", "discount"}
                , new Object[]{"caption", "Disc"}
                , new Object[]{"width", 100}
                , new Object[]{"minWidth", 100}
                , new Object[]{"maxWidth", 100}
                , new Object[]{"required", false}
                , new Object[]{"resizable", true}
                , new Object[]{"nullWhenEmpty", true}
                , new Object[]{"editable", false}
                , new Object[]{"visible", true}
                , new Object[]{"visibleWhen", null}
                , new Object[]{"textCase", com.rameses.rcp.constant.TextCase.NONE}
                , new Object[]{"typeHandler", new com.rameses.rcp.common.DecimalColumnHandler("#,##0.00", -1.0, -1.0, false, 2)}
            }),
            new com.rameses.rcp.common.Column(new Object[]{
                new Object[]{"name", "balance"}
                , new Object[]{"caption", "Balance"}
                , new Object[]{"width", 100}
                , new Object[]{"minWidth", 100}
                , new Object[]{"maxWidth", 100}
                , new Object[]{"required", false}
                , new Object[]{"resizable", true}
                , new Object[]{"nullWhenEmpty", true}
                , new Object[]{"editable", false}
                , new Object[]{"visible", true}
                , new Object[]{"visibleWhen", null}
                , new Object[]{"textCase", com.rameses.rcp.constant.TextCase.NONE}
                , new Object[]{"typeHandler", new com.rameses.rcp.common.DecimalColumnHandler("#,##0.00", -1.0, -1.0, false, 2)}
            })
        });
        pnlCurrent.add(xDataTable3, java.awt.BorderLayout.CENTER);

        pnlBody.add(pnlCurrent, "card4");

        pnlPayment.setVisibleWhen("#{ entity.step == 4 }");

        jPanel14.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        xButton11.setName("applyCredits"); // NOI18N
        xButton11.setVisibleWhen("#{ entity.totalcredits > 0 && entity.totalunpaid >0 }");
        xButton11.setText("Apply Credits");
        jPanel14.add(xButton11);

        xButton7.setName("addPayment"); // NOI18N
        xButton7.setText("Add Payment");
        jPanel14.add(xButton7);

        xButton8.setName("cancelPayment"); // NOI18N
        xButton8.setText("Cancel Payment");
        jPanel14.add(xButton8);

        xDataTable4.setHandler("pmtListHandler");
        xDataTable4.setItems("");
        xDataTable4.setName("selectedPayment"); // NOI18N
        xDataTable4.setVisibleWhen("");
        xDataTable4.setColumns(new com.rameses.rcp.common.Column[]{
            new com.rameses.rcp.common.Column(new Object[]{
                new Object[]{"name", "refdate"}
                , new Object[]{"caption", "Ref Date"}
                , new Object[]{"width", 100}
                , new Object[]{"minWidth", 100}
                , new Object[]{"maxWidth", 100}
                , new Object[]{"required", false}
                , new Object[]{"resizable", true}
                , new Object[]{"nullWhenEmpty", true}
                , new Object[]{"editable", false}
                , new Object[]{"visible", true}
                , new Object[]{"visibleWhen", null}
                , new Object[]{"textCase", com.rameses.rcp.constant.TextCase.NONE}
                , new Object[]{"typeHandler", new com.rameses.rcp.common.DateColumnHandler(null, null, null)}
            }),
            new com.rameses.rcp.common.Column(new Object[]{
                new Object[]{"name", "reftype"}
                , new Object[]{"caption", "Ref. Type"}
                , new Object[]{"width", 120}
                , new Object[]{"minWidth", 150}
                , new Object[]{"maxWidth", 200}
                , new Object[]{"required", false}
                , new Object[]{"resizable", true}
                , new Object[]{"nullWhenEmpty", true}
                , new Object[]{"editable", false}
                , new Object[]{"visible", true}
                , new Object[]{"visibleWhen", null}
                , new Object[]{"textCase", com.rameses.rcp.constant.TextCase.NONE}
                , new Object[]{"typeHandler", new com.rameses.rcp.common.TextColumnHandler()}
            }),
            new com.rameses.rcp.common.Column(new Object[]{
                new Object[]{"name", "refno"}
                , new Object[]{"caption", "Ref No"}
                , new Object[]{"width", 150}
                , new Object[]{"minWidth", 150}
                , new Object[]{"maxWidth", 200}
                , new Object[]{"required", false}
                , new Object[]{"resizable", true}
                , new Object[]{"nullWhenEmpty", true}
                , new Object[]{"editable", false}
                , new Object[]{"visible", true}
                , new Object[]{"visibleWhen", null}
                , new Object[]{"textCase", com.rameses.rcp.constant.TextCase.NONE}
                , new Object[]{"typeHandler", new com.rameses.rcp.common.TextColumnHandler()}
            }),
            new com.rameses.rcp.common.Column(new Object[]{
                new Object[]{"name", "amount"}
                , new Object[]{"caption", "Amount"}
                , new Object[]{"width", 100}
                , new Object[]{"minWidth", 100}
                , new Object[]{"maxWidth", 100}
                , new Object[]{"required", false}
                , new Object[]{"resizable", true}
                , new Object[]{"nullWhenEmpty", true}
                , new Object[]{"editable", false}
                , new Object[]{"visible", true}
                , new Object[]{"visibleWhen", null}
                , new Object[]{"textCase", com.rameses.rcp.constant.TextCase.NONE}
                , new Object[]{"typeHandler", new com.rameses.rcp.common.DecimalColumnHandler("#,##0.00", -1.0, -1.0, false, 2)}
            }),
            new com.rameses.rcp.common.Column(new Object[]{
                new Object[]{"name", "discount"}
                , new Object[]{"caption", "Discounts"}
                , new Object[]{"width", 100}
                , new Object[]{"minWidth", 100}
                , new Object[]{"maxWidth", 100}
                , new Object[]{"required", false}
                , new Object[]{"resizable", true}
                , new Object[]{"nullWhenEmpty", true}
                , new Object[]{"editable", false}
                , new Object[]{"visible", true}
                , new Object[]{"visibleWhen", null}
                , new Object[]{"textCase", com.rameses.rcp.constant.TextCase.NONE}
                , new Object[]{"typeHandler", new com.rameses.rcp.common.DecimalColumnHandler("#,##0.00", -1.0, -1.0, false, 2)}
            }),
            new com.rameses.rcp.common.Column(new Object[]{
                new Object[]{"name", "voided"}
                , new Object[]{"caption", "Voided"}
                , new Object[]{"width", 80}
                , new Object[]{"minWidth", 80}
                , new Object[]{"maxWidth", 80}
                , new Object[]{"required", false}
                , new Object[]{"resizable", true}
                , new Object[]{"nullWhenEmpty", true}
                , new Object[]{"editable", false}
                , new Object[]{"visible", true}
                , new Object[]{"visibleWhen", null}
                , new Object[]{"textCase", com.rameses.rcp.constant.TextCase.NONE}
                , new Object[]{"typeHandler", new com.rameses.rcp.common.CheckBoxColumnHandler(java.lang.Integer.class, 1, 0)}
            }),
            new com.rameses.rcp.common.Column(new Object[]{
                new Object[]{"name", null}
                , new Object[]{"caption", "-    "}
                , new Object[]{"width", 100}
                , new Object[]{"minWidth", 0}
                , new Object[]{"maxWidth", 0}
                , new Object[]{"required", false}
                , new Object[]{"resizable", true}
                , new Object[]{"nullWhenEmpty", true}
                , new Object[]{"editable", false}
                , new Object[]{"visible", true}
                , new Object[]{"visibleWhen", null}
                , new Object[]{"textCase", com.rameses.rcp.constant.TextCase.NONE}
                , new Object[]{"typeHandler", new com.rameses.rcp.common.TextColumnHandler()}
            })
        });

        javax.swing.GroupLayout pnlPaymentLayout = new javax.swing.GroupLayout(pnlPayment);
        pnlPayment.setLayout(pnlPaymentLayout);
        pnlPaymentLayout.setHorizontalGroup(
            pnlPaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPaymentLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlPaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlPaymentLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(xDataTable4, javax.swing.GroupLayout.PREFERRED_SIZE, 815, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, 771, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(145, Short.MAX_VALUE))
        );
        pnlPaymentLayout.setVerticalGroup(
            pnlPaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPaymentLayout.createSequentialGroup()
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(xDataTable4, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 46, Short.MAX_VALUE))
        );

        pnlBody.add(pnlPayment, "card5");

        vwEdit.add(pnlBody, java.awt.BorderLayout.CENTER);

        add(vwEdit, "card4");
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private com.rameses.enterprise.components.MonthList monthList1;
    private javax.swing.JPanel pnlBody;
    private com.rameses.rcp.control.XPanel pnlConsumption;
    private com.rameses.rcp.control.XPanel pnlCurrent;
    private javax.swing.JPanel pnlFoot;
    private javax.swing.JPanel pnlHead;
    private com.rameses.rcp.control.XPanel pnlPayment;
    private com.rameses.rcp.control.XPanel pnlPreviousItem;
    private com.rameses.rcp.control.XPanel vwEdit;
    private com.rameses.rcp.control.XPanel vwInitial;
    private com.rameses.rcp.control.XPanel vwSummary;
    private com.rameses.rcp.control.XActionBar xActionBar1;
    private com.rameses.rcp.control.XButton xButton1;
    private com.rameses.rcp.control.XButton xButton10;
    private com.rameses.rcp.control.XButton xButton11;
    private com.rameses.rcp.control.XButton xButton17;
    private com.rameses.rcp.control.XButton xButton18;
    private com.rameses.rcp.control.XButton xButton19;
    private com.rameses.rcp.control.XButton xButton2;
    private com.rameses.rcp.control.XButton xButton3;
    private com.rameses.rcp.control.XButton xButton4;
    private com.rameses.rcp.control.XButton xButton5;
    private com.rameses.rcp.control.XButton xButton6;
    private com.rameses.rcp.control.XButton xButton7;
    private com.rameses.rcp.control.XButton xButton8;
    private com.rameses.rcp.control.XButton xButton9;
    private com.rameses.rcp.control.XDataTable xDataTable1;
    private com.rameses.rcp.control.XDataTable xDataTable3;
    private com.rameses.rcp.control.XDataTable xDataTable4;
    private com.rameses.rcp.control.XDataTable xDataTable5;
    private com.rameses.rcp.control.XDataTable xDataTable6;
    private com.rameses.rcp.control.XDateField xDateField1;
    private com.rameses.rcp.control.XFormPanel xFormPanel1;
    private com.rameses.rcp.control.XFormPanel xFormPanel11;
    private com.rameses.rcp.control.XFormPanel xFormPanel12;
    private com.rameses.rcp.control.XFormPanel xFormPanel2;
    private com.rameses.rcp.control.XFormPanel xFormPanel3;
    private com.rameses.rcp.control.XFormPanel xFormPanel4;
    private com.rameses.rcp.control.XFormPanel xFormPanel5;
    private com.rameses.rcp.control.XFormPanel xFormPanel7;
    private com.rameses.rcp.control.XFormPanel xFormPanel8;
    private com.rameses.rcp.control.XIntegerField xIntegerField1;
    private com.rameses.rcp.control.XLabel xLabel12;
    private com.rameses.rcp.control.XLabel xLabel13;
    private com.rameses.rcp.control.XLabel xLabel14;
    private com.rameses.rcp.control.XLabel xLabel15;
    private com.rameses.rcp.control.XLabel xLabel16;
    private com.rameses.rcp.control.XLabel xLabel17;
    private com.rameses.rcp.control.XLabel xLabel18;
    private com.rameses.rcp.control.XLabel xLabel2;
    private com.rameses.rcp.control.XLabel xLabel20;
    private com.rameses.rcp.control.XLabel xLabel21;
    private com.rameses.rcp.control.XLabel xLabel22;
    private com.rameses.rcp.control.XLabel xLabel23;
    private com.rameses.rcp.control.XLabel xLabel24;
    private com.rameses.rcp.control.XLabel xLabel25;
    private com.rameses.rcp.control.XLabel xLabel26;
    private com.rameses.rcp.control.XLabel xLabel27;
    private com.rameses.rcp.control.XLabel xLabel29;
    private com.rameses.rcp.control.XLabel xLabel3;
    private com.rameses.rcp.control.XLabel xLabel30;
    private com.rameses.rcp.control.XLabel xLabel31;
    private com.rameses.rcp.control.XLabel xLabel32;
    private com.rameses.rcp.control.XLabel xLabel33;
    private com.rameses.rcp.control.XLabel xLabel34;
    private com.rameses.rcp.control.XLabel xLabel35;
    private com.rameses.rcp.control.XLabel xLabel36;
    private com.rameses.rcp.control.XLabel xLabel37;
    private com.rameses.rcp.control.XLabel xLabel38;
    private com.rameses.rcp.control.XLabel xLabel39;
    private com.rameses.rcp.control.XLabel xLabel4;
    private com.rameses.rcp.control.XLabel xLabel40;
    private com.rameses.rcp.control.XLabel xLabel41;
    private com.rameses.rcp.control.XLabel xLabel42;
    private com.rameses.rcp.control.XLabel xLabel43;
    private com.rameses.rcp.control.XPanel xPanel2;
    private com.rameses.rcp.control.XPanel xPanel3;
    private com.rameses.rcp.control.XTabbedPane xTabbedPane1;
    private com.rameses.rcp.control.XTextField xTextField1;
    // End of variables declaration//GEN-END:variables
}
