import com.rameses.annotations.*;
import java.rmi.server.*;

class WaterworksConsumptionPersistenceInterceptor{
	
	@DataContext('waterworks_billitem') 
	def billItemEm;

	@DataContext('waterworks_itemaccount') 
	def acctEm;

	@Before(pattern="PersistenceService.removeEntity", eval="#{args[0]._schemaname == 'waterworks_consumption'  }")
	public void beforeRemove(def evt) {
		def o = evt.args[0];
		if( o.billed == 1) throw new Exception("Cannot remove this entry because this is already billed");
		def m = billItemEm.find( [consumptionid: o.objid ]).first();
		if( m ) {
			billItemEm.find( [objid: m.objid] ).delete();
		}
	}

	@After(pattern="PersistenceService.read", eval="#{args[0]._schemaname == 'waterworks_consumption'}")
	public void afterRead(def evt) {
		def result = evt.result;
		def m = billItemEm.find( [consumptionid: result.objid ]).first();
		if(m) {
			o.amount = o.amount;
			o.amtpaid = o.amtpaid;
			o.discount = o.discount;
		}
	}


}