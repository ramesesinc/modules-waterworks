import com.rameses.annotations.*;

class WaterworksOtherFeePersistenceInterceptor{
	
	@DataContext("waterworks_otherfee")
	def otherFeeEm; 

	@Before(pattern="PersistenceService.removeEntity", eval="#{args[0]._schemaname == 'waterworks_otherfee'}")
	public void beforeRemove( evt ) {
		def param = evt.args[0];
		def findBy = (param?.findBy ? param.findBy : [objid: param.objid]); 
		def wc = otherFeeEm.find( findBy ).first(); 
		if ( !wc ) return; 

		if ( wc.batchid ) 
			throw new Exception('Cannot delete other fee from batch billing'); 
		if( wc.state == 'POSTED' )	
			throw new Exception('Cannot delete other fee that is already posted'); 
		if ( wc.amtpaid > 0 )
			throw new Exception("Cannot delete other fee since payment was already made");
	} 

	

}