import com.rameses.annotations.*;
import treasury.facts.*;

class WaterworksNewConnectionPersistenceTaskInterceptor {
	
	@Service("DateService")
	def dateSvc;

	@Service("WorkflowTaskService")
	def taskSvc;

	@Service("ControlnoGeneratorService")
    def controlNoSvc;

	@Service("Var")
	def var;

	@DataContext("waterworks_account_info")
	def acctInfoEm;

	@DataContext("waterworks_newconnection")
	def newconnectionEm;

	//NEW CONNECTION
	@Before(pattern="PersistenceService.create", eval="#{ args[0]._schemaname == 'waterworks_newconnection'}")
	void beforeCreateNewConnection( evt ) {
		def p = evt.args[0]; 
		def pattern = var.waterworks_newconnection_controlno_format;
		if(!pattern) throw new Exception("Please specify waterworks_newconnection_controlno_format in sys_var");
		p.controlno = controlNoSvc.getNextNo(pattern);
		//save acct info first
		def acctInfo = acctInfoEm.create( p.account );
		p.acctinfoid = acctInfo.objid;
	}

	@After(pattern="PersistenceService.create", eval="#{ args[0]._schemaname == 'waterworks_newconnection'}")
	void afterCreateNewConnection( evt ) {
		def result = evt.result; 
		def wf = [:];
		wf.processname = 'waterworks_newconnection';
		wf.refid = result.objid;
		wf.startdate = dateSvc.serverDate;
		taskSvc.start( wf );
	}

} 
